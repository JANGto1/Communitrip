[{"/Users/mj/Downloads/Communitrip/client/src/pages/Board.js":"1","/Users/mj/Downloads/Communitrip/client/src/index.js":"2","/Users/mj/Downloads/Communitrip/client/src/App.js":"3","/Users/mj/Downloads/Communitrip/client/src/pages/Login.js":"4","/Users/mj/Downloads/Communitrip/client/src/pages/Mypage.js":"5","/Users/mj/Downloads/Communitrip/client/src/pages/KakaoLogin.js":"6","/Users/mj/Downloads/Communitrip/client/src/pages/Edit_profile.js":"7","/Users/mj/Downloads/Communitrip/client/src/pages/Myboard.js":"8","/Users/mj/Downloads/Communitrip/client/src/pages/Boardpostform.js":"9","/Users/mj/Downloads/Communitrip/client/src/dummy.js":"10","/Users/mj/Downloads/Communitrip/client/src/pages/Create_post.js":"11","/Users/mj/Downloads/Communitrip/client/src/pages/Main.js":"12","/Users/mj/Downloads/Communitrip/client/src/pages/Post.js":"13","/Users/mj/Downloads/Communitrip/client/src/pages/Signup/Signup.js":"14","/Users/mj/Downloads/Communitrip/client/src/pages/Signup/Validation.js":"15","/Users/mj/Downloads/Communitrip/client/src/components/SearchPlace.js":"16","/Users/mj/Downloads/Communitrip/client/src/components/Kakao_Map.js":"17"},{"size":4539,"mtime":1655605868734,"results":"18","hashOfConfig":"19"},{"size":513,"mtime":1655475396888,"results":"20","hashOfConfig":"19"},{"size":5820,"mtime":1655605821503,"results":"21","hashOfConfig":"19"},{"size":5129,"mtime":1655605851218,"results":"22","hashOfConfig":"19"},{"size":3982,"mtime":1655605834240,"results":"23","hashOfConfig":"19"},{"size":1444,"mtime":1655475396889,"results":"24","hashOfConfig":"19"},{"size":4227,"mtime":1655605856192,"results":"25","hashOfConfig":"19"},{"size":1914,"mtime":1655605841515,"results":"26","hashOfConfig":"19"},{"size":1290,"mtime":1655475396889,"results":"27","hashOfConfig":"19"},{"size":693,"mtime":1655475396888,"results":"28","hashOfConfig":"19"},{"size":4474,"mtime":1655605862305,"results":"29","hashOfConfig":"19"},{"size":1147,"mtime":1655475396889,"results":"30","hashOfConfig":"19"},{"size":537,"mtime":1655475396890,"results":"31","hashOfConfig":"19"},{"size":5360,"mtime":1655605889136,"results":"32","hashOfConfig":"19"},{"size":485,"mtime":1655475396890,"results":"33","hashOfConfig":"19"},{"size":1122,"mtime":1655475396888,"results":"34","hashOfConfig":"19"},{"size":1399,"mtime":1655475396888,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"o3pyft",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"44"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"44"},"/Users/mj/Downloads/Communitrip/client/src/pages/Board.js",["102","103","104","105"],[],"import React, { useState, useEffect } from \"react\";\nimport { Routes, Route, useNavigate } from \"react-router\";\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport Boardpostform from './Boardpostform';\nimport { dummyPost } from '../dummy.js';\n\n\nexport const Allpage = styled.div`\nwidth : 99vw;\nheight : 90vh;\nmargin: 0 auto;\n`\nexport const Options = styled.div`\nwidth : 99vw;\nheight : 7vh;\nbackground-color : green;\n`\n\nexport const ViewBoard = styled.div`\nwidth : 99vw;\nheight : 90vh;\noverflow : auto;\nbackground-color : skyblue;\n`\nexport const Vboard = styled.div`\ndisplay: table;\nmargin: 0 auto;\nwidth: 99%;\nheight: calc(100vh - 4rem);\n`\nexport const Vboards = styled.div`\nbackground-color: #bc9eff0e;\npadding: 5rem;\nwidth: 99%;\nmin-height: 90vh;\nheight: 90%;\n`\nexport const Postbutton = styled.button`\nfloat: right;\n`\nexport const Boardbutton = styled.button`\nmargin-right : 25px;\n`\nconst url = `http://localhost:8080`\n\nconst OPTIONS = [\n    { id: 1, value: \"tags\", name: \"태그 선택\" },\n    { id: 2, value: \"mountain\", name: \"산\", post_id: \"1\" },\n    { id: 3, value: \"river\", name: \"강\", post_id: \"2\" },\n    { id: 4, value: \"sea\", name: \"바다\", post_id: \"3\" },\n    { id: 5, value: \"valley\", name: \"계곡\", post_id: \"4\" },\n];\n\n\nconst SelectBox = (props) => {\n    const [tags, setTags] = useState('')\n\n    const handleTags = (e) => {\n        if (e.target.value === \"태그 선택\") {\n            props.setPostsByTags('')\n        } else {\n            axios.get(`${process.env.REACT_APP_API_URL}/tags/${e.target.value}`).then((result) => {\n                props.setPostsByTags(result)\n            })\n            setTags(e.target.value)\n        }\n    }\n    return (\n        <select onChange={handleTags} value={tags}>\n            {props.options.map((option) => (\n                <option\n                    key={option.value}\n                    value={option.post_id}\n                    defaultValue={props.defaultValue === option.value}\n                >\n                    {option.name}\n                </option>\n            ))}\n        </select>\n    );\n};\n\n\n\nexport default function Board(props) {\n    // console.log(props.postsinfo)\n    const navigate = useNavigate();\n    const [tests, settests] = useState()\n    props.onepostinfo(tests)\n    console.log(props.postsByTags.data)\n    const [postsinfo, setPostsinfo] = useState()\n\n    const isPosts = () => {\n        axios.get(`${process.env.REACT_APP_API_URL}/posts`).then((res) => {\n            const test = res.data.data\n            setPostsinfo(test)\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n    useEffect(() => {\n        isPosts();\n    }, []);\n\n    const handlemovepost = (e) => {\n        navigate('/post', { state: { post: e } })\n    }\n\n    props.onepostinfo(tests)\n    return (\n        <Allpage>\n            <Options>\n                <SelectBox options={OPTIONS} postsByTags={props.postsByTags} setPostsByTags={props.setPostsByTags} defaultValue=\"태그 선택\" />\n                게시글 나열 방식  <Postbutton onClick={() => { navigate('/create_post'); }}>글쓰기</Postbutton>\n            </Options>\n            <ViewBoard>\n                <Vboard>\n                    <Vboards>\n                        {props.postsByTags === '' ?\n                            postsinfo && postsinfo.map(posts => {\n                                return (\n                                    <Boardbutton onClick={() => { settests(posts); handlemovepost(posts) }} >\n                                        <Boardpostform\n                                            posts={posts}\n                                            key={posts.id}\n                                        />\n                                    </Boardbutton>\n                                )\n                            }) :\n                            props.postsByTags.data.results.map((posts) => {\n                                return (\n                                    <Boardbutton onClick={() => { settests(posts); handlemovepost(posts) }} >\n                                        <Boardpostform\n                                            posts={posts}\n                                            key={posts.id}\n                                        />\n                                    </Boardbutton>\n                                )\n                            }\n                            )\n                        }\n                    </Vboards>\n                </Vboard>\n            </ViewBoard>\n        </Allpage>\n\n\n    )\n}","/Users/mj/Downloads/Communitrip/client/src/index.js",["106"],[],"import React from \"react\";\n// import { Provider } from 'react-redux';\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport Login from \"./pages/Login\"\nimport Board from \"./pages/Board\"\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nconst login = ReactDOM.createRoot(document.getElementById(\"login\"));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\nlogin.render(\n \n    <Login />\n\n);\n\n",[],"/Users/mj/Downloads/Communitrip/client/src/App.js",["107","108","109","110","111","112"],[],"import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Edit_profile from './pages/Edit_profile'\nimport Mypage from './pages/Mypage';\nimport Main from \"./pages/Main\";\nimport axios from 'axios';\nimport Board from './pages/Board';\nimport Boardpostform from './pages/Boardpostform';\nimport styled from 'styled-components';\nimport Myboard from './pages/Myboard';\nimport KakaoLogin from './pages/KakaoLogin'\nimport Post_edit from './pages/Create_post';\nimport Create_post from './pages/Create_post';\nimport Post from './pages/Post';\n\n\n\n\nexport const ModalBackdrop = styled.div`\nposition: fixed;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nwidth: 100vw;\nheight: 100vh;\nbackground-color : none;\n`;\nexport const MypageBtn = styled.div`\ntext-align: center;\nmargin-top: 20px;\n`\nexport const ModalBtn = styled.button`\n  background-color: #4000c7;\n  text-decoration: none;\n  border: none;\n  padding: 20px;\n  color: white;\n  border-radius: 30px;\n  cursor: pointer;\n`;\nexport const ModalView = styled.div`\nbackground-color: white;\nwidth: 40%;\nmin-width: 100px;\nmax-width: 300px;\nheight: 20%;\noverflow-y: auto;\nborder:solid;\nposition: fixed;\nleft: 50%;\ntop: 50%;\npadding: 5px;\ntransform: translate(-50%, -50%);\nz-index: 1011;\n`;\n\nconst url = `http://localhost:8080`\n\nfunction App() {\n  const navigate = useNavigate();\n  const [userinfo, setUserinfo] = useState({\n\n  });\n  const [postsByTags, setPostsByTags] = useState('');\n  const [postsinfo, setPostsinfo] = useState()\n  const [tags, setTags] = useState()\n  const [onepostinfo, setonepostinfo] = useState({});\n\n  const isPosts = () => {\n    axios.get(`${process.env.REACT_APP_API_URL}/posts`).then((res) => {\n      const test = res.data.data\n      setPostsinfo(test)\n    }).catch(error => {\n      console.log(error)\n    })\n  }\n  const isTags = () => {\n    axios.get(`${process.env.REACT_APP_API_URL}/tags`).then((res) => {\n      const test = res.data.data\n      setTags(test)\n    }).catch(error => {\n      console.log(error)\n    })\n  }\n\n  const isAuthenticated = () => {\n    axios.get(`${process.env.REACT_APP_API_URL}/users/auth`).then((res) => {\n\n      if (res.data.data.userInfo !== null) {\n        const test = res.data.data.userInfo;\n        setUserinfo(test);\n        setIsLogin(true);\n      }\n\n    }).catch(error => {\n      console.log(error);\n    })\n\n  };\n\n\n  const handleResponseSuccess = () => {\n    isAuthenticated();\n  };\n  const handleLogout = () => {\n\n    axios.post(`${process.env.REACT_APP_API_URL}/users/logout`).then((res) => {\n      setUserinfo(null);\n      setIsLogin(false);\n      navigate('/')\n    })\n  }\n  const [isLogin, setIsLogin] = useState(false);\n\n  const [onLoginModal, setOnLoginModal] = useState(false)\n  const onLoginModalHandler = () => {\n    setOnLoginModal(!onLoginModal);\n  }\n  const [isLogout, setIsLogout] = useState(false);\n  const openLogoutHandler = () => {\n    setIsLogout(!isLogout);\n  };\n\n\n  useEffect(() => {\n\n    isAuthenticated();\n    isPosts();\n    isTags();\n  }, [onepostinfo]);\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" variant=\"light\" className=\"nav\">\n        <Container>\n          <Navbar.Brand href=\"/\">Logo</Navbar.Brand>\n          <Nav className=\"nav justify-content-end\" >\n            <Nav.Link\n              href=\"board\"\n              onClick={() => {\n                navigate('/board');\n              }}\n            >\n              게시판\n            </Nav.Link>\n            <Nav.Link\n              href=\"myboard\"\n              onClick={() => {\n                navigate(\"/myboard\");\n              }}\n            >\n              나의게시판\n            </Nav.Link>\n            <Nav.Link\n              href=\"mypage\"\n              onClick={() => {\n                //navigate(\"/mypage\");\n              }}\n            >\n              마이페이지\n            </Nav.Link>\n            <Nav.Link\n\n              onClick={() => {\n                openLogoutHandler();\n              }}\n            >\n              Logout\n            </Nav.Link>\n            <Nav.Link\n              onClick={() => {\n                onLoginModalHandler()\n              }}\n            >\n              Login\n              {onLoginModal ? <Login /> : null}\n            </Nav.Link>\n          </Nav>\n        </Container>\n      </Navbar>\n      {isLogout ? <ModalBackdrop onClick={openLogoutHandler}>\n        <ModalView onClick={(event) => { event.stopPropagation() }}>\n          <center>\n            <br />\n            <div>\n              로그아웃 하시겠습니까?\n            </div>\n            <MypageBtn>\n              <ModalBtn onClick={() => { openLogoutHandler(); handleLogout() }}>\n                확인\n              </ModalBtn>\n            </MypageBtn>\n          </center>\n        </ModalView>\n      </ModalBackdrop> : null}\n      <Routes>\n        <Route path=\"/\" element={<Main />} userinfo={userinfo} />\n        <Route path=\"/mypage\" element={<Mypage userinfo={userinfo} handleLogout={handleLogout} />} />\n        <Route path=\"/login\" element={<Login handleResponseSuccess={handleResponseSuccess} />} />\n        <Route path=\"/edit_profile\" element={<Edit_profile userinfo={userinfo} />} />\n        <Route path=\"/board\" element={<Board postsinfo={postsinfo} userinfo={userinfo} onepostinfo={setonepostinfo} postsByTags={postsByTags} setPostsByTags={setPostsByTags} />} />\n        <Route path=\"/boardpostform\" element={<Boardpostform />} />\n        <Route path=\"/create_post\" element={<Create_post userinfo={userinfo} tags={tags} />} />\n        <Route path=\"/myboard\" element={<Myboard userinfo={userinfo} />} />\n        <Route path=\"/post\" element={<Post />} />\n      </Routes>\n    </div>\n  )\n}\n\nexport default App;\n","/Users/mj/Downloads/Communitrip/client/src/pages/Login.js",["113","114","115","116","117"],[],"import React, { useState, useEffect, useRef, Component } from 'react';\nimport { Button } from 'react-bootstrap'\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'\nimport styled from 'styled-components';\nimport Signup from './Signup/Signup';\nimport KaKaoLogin from 'react-kakao-login'\n\n//import { REST_API_KEY, REDIRECT_URI} from './KakaoLogindata'\n\naxios.defaults.withCredentials = true;\nconst KaKaoBtn = styled(KaKaoLogin)`\n  padding: 0;\n  width: 300px;\n  height: 45px;\n  line-height: 44px;\n  color: #783c00;\n  background-color: #ffeb00;\n  border: 1px solid transparent;\n  border-radius: 3px;\n  font-size: 14px;\n  font-weight: bold;\n  text-align: center;\n  cursor: pointer;\n  &:hover {\n    box-shadow: 0 0px 15px 0 rgba(0, 0, 0, 0.2);\n  }\n`;\nexport const ModalContainer = styled.div`\n  display : flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  margin: 5em;\n`;\nexport const Input = styled.input`\nwidth: 80%;\nheight:150%;\nmin-height: 40px;\n`\nexport const ModalBackdrop = styled.div`\nposition: fixed;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nwidth: 100vw;\nheight: 100vh;\nbackground-color : none;\n`;\n\nexport const ModalBtn = styled.button`\n  background-color: #4000c7;\n  text-decoration: none;\n  border: none;\n  padding: 20px;\n  color: white;\n  border-radius: 30px;\n  cursor: pointer;\n`;\n\nexport const ModalView = styled.div`\nbackground-color: white;\nwidth: 40%;\nmin-width: 300px;\nmax-width: 600px;\nheight: 80%;\noverflow-y: auto;\nborder:solid;\nposition: fixed;\nleft: 50%;\ntop: 50%;\npadding: 5px;\ntransform: translate(-50%, -50%);\nz-index: 1011;\n`;\n\nconst url = `http://localhost:8080`\n\n\nexport default function Login ({ handleResponseSuccess }) {\n\nconst responseKaKao = (res) => {\n  console.log(res.profile.kakao_account)\n  axios.post(`${process.env.REACT_APP_API_URL}/kakao/login`,{\n        data: res.profile.kakao_account\n        \n      }).then()\n      alert('로그인 성공하였습니다')\n      navigate('/')\n      openModalHandler();\n};\n\n  const [isOpen, setIsOpen] = useState(true);\n  const [signUpModalOn, setSignUpModalOn] = useState(false);\n\n  const openModalHandler = () => { \n    setIsOpen(!isOpen);\n  };\n\n \n\n\n  const openSignUpHandler = () => {\n    setSignUpModalOn(!signUpModalOn)\n  }\n\n\n  const navigate= useNavigate();\n  const [loginInfo, setLoginInfo] = useState({\n    email: '',\n    password: ''\n  });\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleInputValue = (key) => (e) => {\n    setLoginInfo({ ...loginInfo, [key]: e.target.value });\n  };\n  const handleLogin = () => {\n    \n    if(loginInfo.email !=='' && loginInfo.password !== ''){\n      axios.post(`${process.env.REACT_APP_API_URL}/users/login`,{\n        email: loginInfo.email,\n        password: loginInfo.password\n      }).then( handleResponseSuccess )\n      navigate('/')\n      openModalHandler();\n    }else{\n      setErrorMessage('이메일과 비밀번호를 입력하세요')\n    }\n  };\n\n \n  return (\n    \n    <div>\n\n          {isOpen ? <ModalBackdrop onClick={openModalHandler}>\n                    <ModalView onClick={(event) => {event.stopPropagation()}}>  \n        <center>\n        <h1>로그인 하기</h1>\n        <br /><br />\n        <form onSubmit={(e) => e.preventDefault()}>\n          <div>\n            <div>이메일 입력</div>\n            <Input type='email' onChange={handleInputValue('email')} />\n          </div>\n          <br />\n          <div>\n            <div>비밀번호 입력</div>\n            <Input\n              type='password'\n              onChange={handleInputValue('password')}\n            />\n          </div>\n          <br /><br /><br /><br /><br /><br /><br /><br />\n          {/* <KaKaoBtn onClick={handlekakaoLogin}>카카오 로그인</KaKaoBtn> */}\n          {/* <button  onClick={() => {handlekakao()}} href=\"javascript:void(0)\" >\n          <span>카카오 로그인</span>\n          </button>\n      \n         \n      \n  \n   <button onclick={handlekakaologout} href=\"javascript:void(0)\">\n        \n            <span>카카오 로그아웃</span>\n        \n    </button> */}\n    <KaKaoBtn\n    //styled component 통해 style을 입혀 줄 예정 \n                jsKey={process.env.REACT_APP_KAKAOINIT}\n    //카카오에서 할당받은 jsKey를 입력\n                buttonText='카카오 계정으로 로그인'\n    //로그인 버튼의 text를 입력\n    onSuccess={responseKaKao}\n    //성공했을때 불러올 함수로서 fetch해서 localStorage에 저장할 함수를 여기로 저장 \n                getProfile={true}\n              />\n            <br /><br />\n          <ModalBtn  onClick={handleLogin}>\n            로그인\n          </ModalBtn>\n          <br /><br />\n          <div>\n          <ModalBtn  className=\"close-btn\" onClick={openSignUpHandler} >\n            회원가입\n          </ModalBtn>\n          </div>\n          <div className='alert-box'>{errorMessage}</div>\n\n          <Signup show={signUpModalOn} onHide={() => setSignUpModalOn(false)} />\n\n        </form>\n      </center>         \n                    </ModalView>\n                  </ModalBackdrop> : null} \n\n    </div>\n  );\n};\n","/Users/mj/Downloads/Communitrip/client/src/pages/Mypage.js",["118"],[],"import React,{ useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport styled from 'styled-components';\nimport axios from 'axios';\nexport const Mypages=styled.div`\nmargin: auto;\nwidth: 600px;\nheight: 600px;\nmargin-top: 100px;\nbackground: #f5cd79;\nborder: 1px solid black;\nborder-radius: 20px;\ntext-align: center;\n`\nexport const PageButton =styled.div`\ntext-align: center;\nmargin-top: 20px;\n`\nexport const Myinfobox = styled.div`\nborder: 1px solid black;\nbackground-color: white;\nmargin-left: 100px;\nmargin-right: 100px;\nwidth: 400px;\nheight: 50px;\nline-height: 3rem;\nfont-weight: 600;\n`\nexport const ModalBackdrop = styled.div`\nposition: fixed;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nwidth: 100vw;\nheight: 100vh;\nbackground-color : none;\n`;\nexport const MypageBtn = styled.div`\ntext-align: center;\nmargin-top: 20px;\n`\nexport const EditButton = styled.button`\nmargin-right: 100px;\nwidth: 120px;\n`\nexport const SignoutButton = styled.button`\nwidth: 120px;\n`\nexport const ModalBtn = styled.button`\n  background-color: #4000c7;\n  text-decoration: none;\n  border: none;\n  padding: 20px;\n  margin-right: 25px;\n  color: white;\n  border-radius: 30px;\n  cursor: pointer;\n`;\nexport const ModalsBtn = styled.button`\n  background-color: #4000c7;\n  text-decoration: none;\n  border: none;\n  padding: 20px;\n  color: white;\n  border-radius: 30px;\n  cursor: pointer;\n`;\nexport const ModalView = styled.div`\nbackground-color: white;\nwidth: 40%;\nmin-width: 100px;\nmax-width: 300px;\nheight: 20%;\noverflow-y: auto;\nborder:solid;\nposition: fixed;\nleft: 50%;\ntop: 50%;\npadding: 5px;\ntransform: translate(-50%, -50%);\nz-index: 1011;\n`;\n\nconst url = `http://localhost:8080`\n\n\nexport default function Mypage(props) {\n  const navigate = useNavigate();\n  const [isOpen, setIsOpen] = useState(false);\n  const [isDelete, setIsDelete] = useState(false);\n  const openModalHandler = () => { \n    setIsOpen(!isOpen);\n  };\n  const openDeleteHandler = () => { \n    setIsDelete(!isDelete);\n    setIsOpen(false);\n  };\n  console.log(props)\n  const handleSignout =() =>{\n    axios.delete(`${process.env.REACT_APP_API_URL}/users/${props.userinfo.id}`)\n    .then((data) => {\n      navigate('/')\n    })\n  }\n  console.log(props)\n  return (\n    <div>\n      <Mypages>\n        <h1>Myinfo</h1>\n        <br /><br /><br /><br />\n        이름 :<Myinfobox > {props.userinfo.name}</Myinfobox>\n        <br /><br />\n        e-mail :<Myinfobox>\n          {props.userinfo.email}\n        </Myinfobox>\n        \n      </Mypages>\n      <PageButton>\n        <EditButton onClick={() => {\n                navigate('/edit_profile');}}>\n          회원정보 수정\n        </EditButton>\n        <SignoutButton onClick={openModalHandler}>\n          회원 탈퇴\n        </SignoutButton>\n      </PageButton>\n      {isOpen ? <ModalBackdrop onClick={openModalHandler}>\n                    <ModalView onClick={(event) => {event.stopPropagation()}}>  \n        <center>\n        <br />\n          <div>\n          정말로 회원탈퇴를 하시겠습니까?\n          </div>\n          <MypageBtn>\n          <ModalBtn  className=\"close-btn\" onClick={() => {openDeleteHandler();}}>\n            확인\n          </ModalBtn>\n          <ModalsBtn  className=\"close-btn\" onClick={openModalHandler}>\n            취소\n          </ModalsBtn>\n          </MypageBtn>\n        </center>\n                  </ModalView>\n                  </ModalBackdrop> : null}\n      {isDelete ? <ModalBackdrop onClick={openDeleteHandler}>\n                    <ModalView onClick={(event) => {event.stopPropagation()}}>  \n        <center>\n        <br />\n          <div>\n          탈퇴가 완료되었습니다.\n          </div>\n          <MypageBtn>          \n          <ModalBtn onClick={() => {openDeleteHandler();handleSignout();props.handleLogout()}}>\n            확인\n          </ModalBtn>\n          </MypageBtn>\n        </center>\n                  </ModalView>\n                  </ModalBackdrop> : null} \n    </div>\n    \n  );\n}\n","/Users/mj/Downloads/Communitrip/client/src/pages/KakaoLogin.js",[],[],"/Users/mj/Downloads/Communitrip/client/src/pages/Edit_profile.js",["119"],[],"import React,{ useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router';\nimport { Button, Form } from \"react-bootstrap\";\nimport styled from 'styled-components';\nimport  {checkPassword}  from './Signup/Validation'\n\nconst Errmessage = styled(Form.Text)`\ncolor: red;\n`\nexport const Editstyle=styled.div`\nmargin: auto;\nwidth:60%;\nheight: 100%;\nmargin-top: 5%;\nbackground: #f5cd79;\nborder: 1px solid black;\nborder-radius: 20px;\ntext-align: center;\n`\nexport const Input = styled.input`\nwidth:80%;\nheight:60%;\nmin-height:40px;\n`\nexport const Emails = styled.div`\nwidth:80%;\nheight:60%;\nmin-height:40px;\nbackground-color: white;\nborder:1px solid black;\n`\nexport default function EditProfile(props) {\n  const [editInfo, setEditInfo] = useState({\n    name: '',\n    email: props.userinfo.email,\n    pastpassword: props.userinfo.password,\n    password: '',\n    newpassword:'',\n    samepassword:''\n  });\n  console.log(props.userinfo)\n  console.log(editInfo)\n  const handleInputValue = (key) => (e) => {\n    setEditInfo({ ...editInfo, [key]: e.target.value });\n  };\n  const navigate= useNavigate();\n  const [errName, setErrName] = useState('');\n  const [errPassword, setErrPassword] = useState('');\n  const [errPasswords, setErrPasswords] = useState('');\n  const [errPasswordChecked, setErrPasswordChecked] = useState('');\n  \n  useEffect(() => {\n    const {\n      name,\n      pastpassword:curpastpassword,\n      password: curpassword,\n      newpassword: curnewpassword,\n      samepassword,\n    } = editInfo;\n\n    if (!name) {\n      setErrName('이름이 비어있습니다.');\n    } else {\n      setErrName('');\n    }\n    if (curpassword !== curpastpassword) {\n      setErrPassword('이전비밀번호와 일치하지 않습니다.');\n    } else {\n      setErrPassword('');\n    }\n    if (!curnewpassword || !checkPassword(curnewpassword) || curnewpassword ===curpassword){\n      setErrPasswords('비밀번호 8자리이상 및 특수기호 한개이상 포함해주세요.')\n    } else{\n      setErrPasswords('');\n    }\n    if (curnewpassword !== samepassword) {\n      setErrPasswordChecked('새로운 비밀번호와 일치하지 않습니다..');\n    } else {\n      setErrPasswordChecked('');\n    }\n  }, [editInfo]);\n\n  const url = `http://localhost:8080`\n\n  \n  const handleEdit = () => {\n    \n    if(editInfo.name !=='' && editInfo.password !== '' && editInfo.newpassword !== '' && editInfo.samepassword !==''){\n      axios.patch(`${process.env.REACT_APP_API_URL}/users/${props.userinfo.id}`,{\n        name: editInfo.name,\n        password: editInfo.newpassword,\n      }).then(props.userinfo.name = editInfo.name,props.userinfo.password = editInfo.password)   \n    }\n    navigate('/mypage')\n  };\n  //console.log(editInfo)\n  return (\n    <Editstyle>\n      <center>\n        <h3>회원정보 수정</h3>\n        \n        <div>이름</div><div><Input type=\"text\" onChange={handleInputValue('name')} />\n        </div>\n        <Errmessage className=\"text_muted\">\n                {errName}\n              </Errmessage>\n              <br /><br />\n        <div>e-mail</div><Emails>\n          {props.userinfo.email}\n        </Emails>\n        \n        <br />\n        \n        <div>현재 비밀번호</div><div><Input type=\"password\" onChange={handleInputValue('password')} />\n        </div>\n        <Errmessage className=\"text_muted\">\n                {errPassword}\n              </Errmessage>\n        <br /><br />\n        \n        <div>비밀번호 수정 </div> <div><Input type=\"password\" onChange={handleInputValue('newpassword')} />\n        </div>\n        <Errmessage className=\"text_muted\">\n                {errPasswords}\n              </Errmessage>\n        <br /><br />\n        \n        <div>비밀번호 수정확인</div>  <div><Input type=\"password\" onChange={handleInputValue('samepassword')} />\n        </div>\n        <Errmessage className=\"text_muted\">\n                {errPasswordChecked}\n              </Errmessage>\n        <br /><br /><br /><br />\n        <div>\n        <Button variant=\"outline-primary\" className='edit-button' onClick={handleEdit} >\n          회원정보 수정하기\n        </Button>\n        <br /><br /><br />\n        </div>\n      </center>\n    </Editstyle>\n  )\n}","/Users/mj/Downloads/Communitrip/client/src/pages/Myboard.js",["120","121"],[],"import React,{ useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport Boardpostform from './Boardpostform';\n\n\n\nexport const Allpage = styled.div`\nwidth : 99vw;\nheight : 90vh;\nmargin: 0 auto;\n`\nexport const Boardbutton = styled.button`\nmargin-right : 25px\n`\nexport const Options = styled.div`\nwidth : 99vw;\nheight : 4vh;\nbackground-color : green;\n`\nexport const ViewBoard =styled.div`\nwidth : 99vw;\nheight : 90vh;\noverflow : auto;\nbackground-color : skyblue;\n`\nexport const Vboard = styled.div`\ndisplay: table;\nmargin: 0 auto;\nwidth: 99%;\nheight: calc(100vh - 4rem);\n`\nexport const Vboards = styled.div`\nbackground-color: #bc9eff0e;\npadding: 5rem;\nwidth: 99%;\nmin-height: 90vh;\nheight: 90%;\n`\nexport const Postbutton = styled.button`\nfloat: right;\n`\n\nconst url = `http://localhost:8080`\n\n\nexport default function Myboard(props){\nconsole.log(props.userinfo)\nconst navigate = useNavigate();\nconst [mypostsinfo, setmyPostsinfo]=useState();\nconsole.log(mypostsinfo)\nconst isMyposts =() =>{\n    axios.get (`${process.env.REACT_APP_API_URL}/posts/users/${props.userinfo.id}`).then((res)=>{ \n      const info = res.data.data    \n      setmyPostsinfo(info)\n        }).catch(error =>{\n          console.log(error)\n        })\n  }\n  useEffect(() => {\n    isMyposts();\n  }, [props.userinfo]);\nreturn(\n<Allpage>\n    <Options>\n        태그선택  게시글 나열 방식  <Postbutton onClick={() => {navigate('/create_post');}}>글쓰기</Postbutton>\n    </Options>\n    <ViewBoard>\n    <Vboard>\n      <Vboards>\n      {mypostsinfo&&mypostsinfo.map(posts=>\n            <Boardbutton onClick={() => {}}>\n            <Boardpostform \n            posts={posts}\n            key={posts.id}\n            />\n            </Boardbutton>\n            \n            )}\n            \n      </Vboards>\n    </Vboard>\n    </ViewBoard>\n</Allpage>\n\n\n)\n}","/Users/mj/Downloads/Communitrip/client/src/pages/Boardpostform.js",["122","123"],[],"import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Postform = styled.div`\ndisplay: inline-block;\nwidth: 300px;\nheight: 290px;\nmargin: 0.3rem;\nbackground-color: white;\n`\nexport const Postforms = styled.div`\ndisplay: flex;\nwidth: 300px;\nheight: 30px;\nborder: 1px solid black;\n`\nexport const Postimg = styled.img`\nflex: 1 1 100%;\nwidth: 300px;\nheight: 260px;\nmargin: 0;\nobject-fit: cover;\n`\nexport const Posttitle = styled.span`\nflex: 1 2 100%;\nfloat: left;\nfont-weight: 400;\n\n`\nexport const Postcontent = styled.div`\nflex: 2 1 100%;\nwhite-space: nowrap;\noverflow:hidden;\ntext-overflow: ellipsis;\nborder-left : 1px solid black;\nborder-right : 1px solid black;\n`\nexport const Postlike = styled.span`\nflex: 1 3 100%;\nfloat: right;\nfont-weight: 700;\n`\n\nconst changeLikes = () => {\n\n}\n\nexport default function Boardpostform({posts}){\n\n    return(\n        <>\n            <Postform key={posts.id}>\n            <Postimg src={posts.image} alt={posts.title}/>\n            <Postforms>\n            <Posttitle >{posts.title}</Posttitle>\n            <Postcontent>{posts.contents}</Postcontent>\n            <Postlike>{posts.total_likes}</Postlike>\n            </Postforms>\n            \n            </Postform>\n        </>\n    )\n}","/Users/mj/Downloads/Communitrip/client/src/dummy.js",[],[],"/Users/mj/Downloads/Communitrip/client/src/pages/Create_post.js",["124","125","126","127","128","129","130","131"],[],"import axios from 'axios';\nimport {Dropdown, DropdownButton} from 'react-bootstrap';\nimport styled from 'styled-components';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport KakaoMap from '../components/SearchPlace'\n\naxios.defaults.withCredentials = true;\n\nconst TitleInput = styled.input`\n  margin: auto;\n  width : 40vw;\n  height : 3vh;\n  `\nconst Dropdownbtn = styled(DropdownButton)`\n  #dropdown-item-button{\n    width: 9vw;\n    height: 4vh;\n    line-height: 1rem;\n    margin: 20px;\n  }\n  \n`\n\nconst PreviewDiv = styled.div`\n  margin-left: 10px;\n  border: 5px solid rgb(122, 238, 72);\n  border-radius: 20px;\n  min-width: 300px;\n  min-height: 300px;\n  width: 22%;\n  height: 20%;\n  .previewImg {\n    width: 300px;\n    height: 300px;\n  }\n` \n\nexport default function Create_post(props) {\n  const [postInfo, setpostInfo] = useState({\n    user_id: props.userinfo.id,\n    contents: '',\n    title: '',\n    tag_id: '',\n    total_likes: 0,\n    image: '',\n    address: '',\n    longitude: '',\n    latitude: '',\n  });\n  const [coordinate, setCoordinate] = useState(\"\");\n  const [tagName, setTagName] = useState('태그');\n  const [imageSrc, setImageSrc] = useState('');\n  const userId = props.userinfo.id\n  const inputRef = useRef();\n  const navigate= useNavigate();\n  console.log(userId)\n  console.log(props.tags)\n  console.log('렌더링...')\n  console.log(coordinate.x)\n  \n  \n  const handleImage = (e) => {\n    console.log(e.target.files)\n    inputRef.current.click()\n    \n  }\n\n  const handleTags = (e) => {\n    setTagName(e.name)\n    const tagId = e.id\n    setpostInfo((e) => {\n      console.log(tagId)\n      return {...e, tag_id: tagId}\n    })\n    \n  }\n\n  const preview = (fileBlob) => {    \n    const reader = new FileReader();\n    reader.readAsDataURL(fileBlob);\n    return new Promise((resolve) => {\n      reader.onload = () => {\n        const img = reader.result;\n        console.log(img)\n        setImageSrc(reader.result);\n        setpostInfo((e) => {\n          return {...e, image: img}\n        })\n        resolve();\n      };\n    });\n  };\n\n  const handlePostInfo = (key) =>(e) => {\n    setpostInfo({ ...postInfo, [key]: e.target.value });\n  }\n\n  const url = `http://localhost:8080`\n\n  const handlesucces = () => {\n    if(postInfo.user_id !== '' \n    && postInfo.contents !== '' \n    && postInfo.title !== '' \n    && postInfo.tag_id !== '' \n    // && postInfo.image !== '' \n    // && postInfo.longitude !== '' \n    // && postInfo.latitude !== ''\n    ) {\n      axios.post(`${process.env.REACT_APP_API_URL}/posts/${userId}`,{\n        user_id: postInfo.user_id,\n        contents: postInfo.contents,\n        title: postInfo.title,\n        tag_id: postInfo.tag_id,\n        total_likes: 0,\n        image: postInfo.image,\n        address: postInfo.address,\n        longitude: postInfo.longitude,\n        latitude: postInfo.latitude,\n      }).then(\n      navigate('/board')\n      )\n    } \n  } \n  console.log(postInfo)\n  return (\n    <div>\n      <center>\n      <h2>게시글 작성</h2>\n      </center>\n      <>\n        <div>제목</div>\n        <TitleInput  type=\"text\" onChange={handlePostInfo('title')} placeholder='제목을 입력해주세요'  />\n      </>\n      <div>태그선택</div>\n      <Dropdownbtn id=\"dropdown-item-button\" title={tagName} >\n      {props.tags?.map(tags => {\n        return <Dropdown.Item \n        as=\"button\" \n        key={tags.id}  \n        onClick={() =>{\n          handleTags(tags)\n        }}\n        >\n        {tags.name}\n        </Dropdown.Item>\n      })}\n    </Dropdownbtn>\n    {/* <div>이미지</div>\n    <PreviewDiv>\n      <div className=\"preview\" >\n        {imageSrc && <img src={imageSrc} alt=\"preview-img\" className=\"previewImg\" />}\n      </div>\n    </PreviewDiv>\n    <input\n      ref={inputRef}\n      type=\"file\" \n      id=\"real-input\" \n      className=\"image_inputType_file\" \n      style={{ display: \"none\" }}\n      accept=\"image/*\" \n      onChange={(e) => {\n        preview(e.target.files[0]);\n      }}\n      required multiple \n      />\n    <button className=\"browse-btn\" onClick={handleImage}>\n      사진업로드\n    </button> */}\n    <div>글 작성</div>\n      <input type=\"text\" placeholder='글을 작성해주세요' onChange={handlePostInfo('contents')} />\n    <div>지도</div>\n      {/* <KakaoMap setCoordinate={setCoordinate} setpostInfo={setpostInfo} coordinate={coordinate}/> */}\n      <button onClick={handlesucces} >작성완료</button>\n\n    </div>\n  )\n}","/Users/mj/Downloads/Communitrip/client/src/pages/Main.js",["132","133"],[],"import React from \"react\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport styled from 'styled-components';\n\n// import { randomSaying, userinfo } from '../dummy.js';\nimport axios from 'axios';\n\nexport const Showpage = styled.div`\nwidth : 100vw;\nheight : 91vh;\n`\nexport const Buttons = styled.button`\nbackground-color: skyblue;\ncursor : pointer;\nwidth : 100%;\nheight: 23vh;\n`\nexport const Views =styled.div`\nbackground-color: green;\nwidth : 100%;\nheight: 27vh;\nborder : solid 1px black;\n`\nexport const Footers =styled.div`\nbackground-color: green;\nwidth : 100%;\nheight: 14vh;\nborder : solid 1px black;\n`\nexport default function Main() {\n  const navigate = useNavigate();\n  return (\n   \n      <Showpage>\n      <center>\n       <Views>\n      소개글 보여주는 창 \n      \n      </Views>\n      <Views>\n      소개글 보여주는 창\n      </Views>\n      <Buttons  onClick={() => {\n                navigate('/board');\n              }}>\n            게시판 페이지로 이동하기\n          </Buttons>\n      <Footers>\n      footer\n      </Footers>\n\n        </center>\n\n        </Showpage>\n     \n    \n  );\n}\n","/Users/mj/Downloads/Communitrip/client/src/pages/Post.js",["134","135","136","137","138","139","140"],[],"import React,{ useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router\";\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { checkPassword } from \"./Signup/Validation\";\n\n\nexport default function(){\nconst location =useLocation();\nconsole.log(location)\nconsole.log(location.state)\nconsole.log(location.state.post.title)\n\n\nreturn(\n <>\n <center>\n  <h1>{location.state.post.title}</h1>\n\n <img src={location.state.post.image} alt={location.state.post.title} />\n </center>\n </>\n    )\n}","/Users/mj/Downloads/Communitrip/client/src/pages/Signup/Signup.js",["141"],[],"import { Modal, Button, Form, Container} from 'react-bootstrap'\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {checkUserEmail, checkPassword} from './Validation'\naxios.defaults.withCredentials = true;\n\nconst Errmessage = styled(Form.Text)`\ncolor: red;\n`\n\nconst SignUpModal = styled(Modal)`\nwidth: 40%;\nmin-width: 300px;\nmax-width: 500px;\nheight: 80%;\noverflow-y: auto;\nposition: fixed;\nleft: 50%;\ntop: 50%;\npadding: 5px;\ntransform: translate(-50%, -50%);\n\n.SingupBtn {\n  background-color: gray;\n}\n`\nconst url = `http://localhost:8080`\n\nexport default function Signup({show, onHide}) {\n\n  const [signupInfo, setSignupInfo] = useState({\n    userName: '',\n    email: '',\n    password: '',\n    passwordChecked: '',\n  });\n  const [errUserName, setErrUserName] = useState('');\n  const [errEmail, setErrEmail] = useState('');\n  const [errPassword, setErrPassword] = useState('');\n  const [errPasswordChecked, setErrPasswordChecked] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate= useNavigate();\n\n  const handleInputValue = (key, e) => {\n    \n    setSignupInfo({ ...signupInfo, [key]: e.target.value });\n  };\n\n  useEffect(() => {\n    const {\n      userName,\n      email: curEmail,\n      password: curpassword,\n      passwordChecked,\n    } = signupInfo;\n\n    if (!userName) {\n      setErrUserName('이름이 비어있습니다.');\n    } else {\n      setErrUserName('');\n    }\n    if (!curEmail || !checkUserEmail(curEmail)) {\n      setErrEmail('@, . 을 포함하여야 합니다.');\n    } else {\n      setErrEmail('');\n    }\n    if (!curpassword || !checkPassword(curpassword)) {\n      setErrPassword('비밀번호 8자리이상 및 특수기호 한개이상 포함해주세요.');\n    } else {\n      setErrPassword('');\n    }\n    if (curpassword !== passwordChecked) {\n      setErrPasswordChecked('비밀번호가 일치해야 합니다.');\n    } else {\n      setErrPasswordChecked('');\n    }\n  }, [signupInfo]);\n\n\n  const handleSignup = () => {\n    if(signupInfo.email !== '' && signupInfo.password !=='' && signupInfo.name !==''){\n      axios.post(`${process.env.REACT_APP_API_URL}/users/signup`,{\n        name:signupInfo.userName,\n        email:signupInfo.email,\n        password:signupInfo.password,\n      })\n      \n      setErrorMessage('')\n      navigate('/')\n    }else{\n      setErrorMessage('모든 항목은 필수입니다')\n    }\n  };\n\n  return (\n    <div>\n      <SignUpModal\n        show= {show}\n        onHide= {onHide}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Container>\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              회원가입\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n          <Form>\n          <Form.Group className=\"mb-3\">\n              <Form.Label>이름</Form.Label>\n              <Form.Control\n                placeholder=\"이름을 입력해주세요.\"\n                onChange={e => handleInputValue('userName', e)} \n              />\n              <Errmessage className=\"text_muted\">\n                {errUserName}\n              </Errmessage>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label>이메일</Form.Label>\n              <Form.Control \n                type=\"email\"\n                placeholder=\"이메일을 입력해주세요.\"\n                onChange={e => handleInputValue('email',e)} \n              />\n              <Errmessage className=\"text_muted\">\n                {errEmail}\n              </Errmessage>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label>비밀번호</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"비밀번호를 입력해주세요.\"\n                onChange={e => handleInputValue('password', e)}  \n              />\n              <Errmessage className=\"text_muted\">\n                {errPassword}\n              </Errmessage>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label>비밀번호 확인</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"비밀번호를 입력해주세요.\"\n                onChange={e => handleInputValue('passwordChecked', e)} \n              />\n              <Errmessage className=\"text_muted\">\n                {errPasswordChecked}\n              </Errmessage>\n            </Form.Group>\n            <center>\n            <Button \n              variant='primary'\n              type='button' \n              className='SingupBtn' \n              onClick={() => {\n                handleSignup()\n                onHide()\n              }}\n            >\n              회원가입\n            </Button>\n            <div>\n            <Errmessage className=\"text_muted\">\n                {errorMessage}\n              </Errmessage>\n            </div>\n            </center>\n          </Form>\n          </Modal.Body>\n          <Modal.Footer>\n          <Button variant=\"primary\" type=\"button\">\n              Submit\n            </Button>\n          </Modal.Footer>\n        </Container>\n      </SignUpModal>\n    </div>\n  );\n}","/Users/mj/Downloads/Communitrip/client/src/pages/Signup/Validation.js",["142","143"],[],"// 유효성 검사 : 이메일 작성시 (. , @)는 반드시 한개만 입력 가능\nexport function checkUserEmail(email) {\n  return /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/.test(email)\n}\n\n// 유효성 검사 : 비밀번호 작성시 대,소문자 구분x 특수문자 한개 이상 포함, 8자리이상\nexport function checkPassword(password) {\n  return /^(?=.*[a-zA-z])(?=.*\\d)(?=.*[@$!%*#?&])[a-zA-z\\d@$!%*#?&]{8,}$/.test(password)\n}\n","/Users/mj/Downloads/Communitrip/client/src/components/SearchPlace.js",[],[],"/Users/mj/Downloads/Communitrip/client/src/components/Kakao_Map.js",["144","145","146","147"],[],"import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nconst { kakao } = window;\n\nconst mapDiv = styled.div`\nmargin: 10px\n`\n\nconst MapContainer = ({ searchPlace, setCoordinate, setpostInfo, coordinate }) => {\n  useEffect(() => {\n    const container = document.getElementById(\"myMap\");\n    const options = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\n      level: 3,\n    };\n    const map = new kakao.maps.Map(container, options);\n\n    const ps = new kakao.maps.services.Places();\n\n    ps.keywordSearch(searchPlace, placesSearchCB);\n\n    function placesSearchCB(data, status, pagination) {\n      if (status === kakao.maps.services.Status.OK) {\n        let bounds = new kakao.maps.LatLngBounds();\n\n        for (let i = 0; i < data.length; i++) {\n          displayMarker(data[i]);\n          bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\n          setCoordinate(data[i])\n          break;\n        }\n\n        map.setBounds(bounds);\n      }\n    }\n\n    function displayMarker(place) {\n      let marker = new kakao.maps.Marker({\n        map: map,\n        position: new kakao.maps.LatLng(place.y, place.x),\n        \n      });\n    }\n  }, [searchPlace]);\n\n    return (\n        <div id='myMap' style={{\n            width: \"300px\",\n            height: \"300px\",\n            margin: '50px'\n        }}></div>\n    );\n}\n\nexport default MapContainer; ",{"ruleId":"148","severity":1,"message":"149","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":16},{"ruleId":"148","severity":1,"message":"152","line":2,"column":18,"nodeType":"150","messageId":"151","endLine":2,"endColumn":23},{"ruleId":"148","severity":1,"message":"153","line":6,"column":10,"nodeType":"150","messageId":"151","endLine":6,"endColumn":19},{"ruleId":"148","severity":1,"message":"154","line":45,"column":7,"nodeType":"150","messageId":"151","endLine":45,"endColumn":10},{"ruleId":"148","severity":1,"message":"155","line":6,"column":8,"nodeType":"150","messageId":"151","endLine":6,"endColumn":13},{"ruleId":"148","severity":1,"message":"156","line":14,"column":8,"nodeType":"150","messageId":"151","endLine":14,"endColumn":18},{"ruleId":"148","severity":1,"message":"157","line":15,"column":8,"nodeType":"150","messageId":"151","endLine":15,"endColumn":17},{"ruleId":"148","severity":1,"message":"154","line":60,"column":7,"nodeType":"150","messageId":"151","endLine":60,"endColumn":10},{"ruleId":"148","severity":1,"message":"158","line":116,"column":10,"nodeType":"150","messageId":"151","endLine":116,"endColumn":17},{"ruleId":"159","severity":1,"message":"160","line":203,"column":46,"nodeType":"161","messageId":"162","endLine":203,"endColumn":82},{"ruleId":"159","severity":1,"message":"163","line":206,"column":45,"nodeType":"161","messageId":"162","endLine":206,"endColumn":92},{"ruleId":"148","severity":1,"message":"164","line":1,"column":27,"nodeType":"150","messageId":"151","endLine":1,"endColumn":36},{"ruleId":"148","severity":1,"message":"165","line":1,"column":38,"nodeType":"150","messageId":"151","endLine":1,"endColumn":44},{"ruleId":"148","severity":1,"message":"166","line":1,"column":46,"nodeType":"150","messageId":"151","endLine":1,"endColumn":55},{"ruleId":"148","severity":1,"message":"167","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":16},{"ruleId":"148","severity":1,"message":"154","line":77,"column":7,"nodeType":"150","messageId":"151","endLine":77,"endColumn":10},{"ruleId":"148","severity":1,"message":"154","line":84,"column":7,"nodeType":"150","messageId":"151","endLine":84,"endColumn":10},{"ruleId":"148","severity":1,"message":"154","line":84,"column":9,"nodeType":"150","messageId":"151","endLine":84,"endColumn":12},{"ruleId":"148","severity":1,"message":"154","line":45,"column":7,"nodeType":"150","messageId":"151","endLine":45,"endColumn":10},{"ruleId":"168","severity":1,"message":"169","line":63,"column":6,"nodeType":"170","endLine":63,"endColumn":22,"suggestions":"171"},{"ruleId":"148","severity":1,"message":"172","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":21},{"ruleId":"148","severity":1,"message":"173","line":45,"column":7,"nodeType":"150","messageId":"151","endLine":45,"endColumn":18},{"ruleId":"148","severity":1,"message":"164","line":4,"column":35,"nodeType":"150","messageId":"151","endLine":4,"endColumn":44},{"ruleId":"148","severity":1,"message":"174","line":6,"column":8,"nodeType":"150","messageId":"151","endLine":6,"endColumn":16},{"ruleId":"148","severity":1,"message":"175","line":25,"column":7,"nodeType":"150","messageId":"151","endLine":25,"endColumn":17},{"ruleId":"148","severity":1,"message":"176","line":51,"column":22,"nodeType":"150","messageId":"151","endLine":51,"endColumn":35},{"ruleId":"148","severity":1,"message":"177","line":53,"column":10,"nodeType":"150","messageId":"151","endLine":53,"endColumn":18},{"ruleId":"148","severity":1,"message":"178","line":63,"column":9,"nodeType":"150","messageId":"151","endLine":63,"endColumn":20},{"ruleId":"148","severity":1,"message":"179","line":79,"column":9,"nodeType":"150","messageId":"151","endLine":79,"endColumn":16},{"ruleId":"148","severity":1,"message":"154","line":99,"column":9,"nodeType":"150","messageId":"151","endLine":99,"endColumn":12},{"ruleId":"148","severity":1,"message":"180","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":18},{"ruleId":"148","severity":1,"message":"181","line":7,"column":8,"nodeType":"150","messageId":"151","endLine":7,"endColumn":13},{"ruleId":"148","severity":1,"message":"180","line":1,"column":16,"nodeType":"150","messageId":"151","endLine":1,"endColumn":24},{"ruleId":"148","severity":1,"message":"164","line":1,"column":26,"nodeType":"150","messageId":"151","endLine":1,"endColumn":35},{"ruleId":"148","severity":1,"message":"172","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":21},{"ruleId":"148","severity":1,"message":"182","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":14},{"ruleId":"148","severity":1,"message":"181","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":13},{"ruleId":"148","severity":1,"message":"183","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":23},{"ruleId":"184","severity":1,"message":"185","line":8,"column":1,"nodeType":"186","endLine":24,"endColumn":2},{"ruleId":"148","severity":1,"message":"154","line":29,"column":7,"nodeType":"150","messageId":"151","endLine":29,"endColumn":10},{"ruleId":"187","severity":1,"message":"188","line":3,"column":27,"nodeType":"189","messageId":"190","endLine":3,"endColumn":28,"suggestions":"191"},{"ruleId":"187","severity":1,"message":"188","line":3,"column":60,"nodeType":"189","messageId":"190","endLine":3,"endColumn":61,"suggestions":"192"},{"ruleId":"148","severity":1,"message":"180","line":1,"column":28,"nodeType":"150","messageId":"151","endLine":1,"endColumn":36},{"ruleId":"148","severity":1,"message":"193","line":6,"column":7,"nodeType":"150","messageId":"151","endLine":6,"endColumn":13},{"ruleId":"148","severity":1,"message":"194","line":39,"column":11,"nodeType":"150","messageId":"151","endLine":39,"endColumn":17},{"ruleId":"168","severity":1,"message":"195","line":45,"column":6,"nodeType":"170","endLine":45,"endColumn":19,"suggestions":"196"},"no-unused-vars","'Routes' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'dummyPost' is defined but never used.","'url' is assigned a value but never used.","'Board' is defined but never used.","'KakaoLogin' is defined but never used.","'Post_edit' is defined but never used.","'isLogin' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Edit_profile must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Create_post must be in PascalCase or SCREAMING_SNAKE_CASE","'useEffect' is defined but never used.","'useRef' is defined but never used.","'Component' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isMyposts'. Either include it or remove the dependency array.","ArrayExpression",["197"],"'useNavigate' is defined but never used.","'changeLikes' is assigned a value but never used.","'KakaoMap' is defined but never used.","'PreviewDiv' is assigned a value but never used.","'setCoordinate' is assigned a value but never used.","'imageSrc' is assigned a value but never used.","'handleImage' is assigned a value but never used.","'preview' is assigned a value but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'styled' is defined but never used.","'checkPassword' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["198","199"],["200","201"],"'mapDiv' is assigned a value but never used.","'marker' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setCoordinate'. Either include it or remove the dependency array. If 'setCoordinate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["202"],{"desc":"203","fix":"204"},{"messageId":"205","fix":"206","desc":"207"},{"messageId":"208","fix":"209","desc":"210"},{"messageId":"205","fix":"211","desc":"207"},{"messageId":"208","fix":"212","desc":"210"},{"desc":"213","fix":"214"},"Update the dependencies array to be: [isMyposts, props.userinfo]",{"range":"215","text":"216"},"removeEscape",{"range":"217","text":"218"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"219","text":"220"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"221","text":"218"},{"range":"222","text":"220"},"Update the dependencies array to be: [searchPlace, setCoordinate]",{"range":"223","text":"224"},[1360,1376],"[isMyposts, props.userinfo]",[109,110],"",[109,109],"\\",[142,143],[142,142],[1195,1208],"[searchPlace, setCoordinate]"]